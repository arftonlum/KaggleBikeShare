#| echo: false
library(tidyverse)
n <- 10
p <- .7
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
x
prod(p^x * (1-p)^(1-x))
p <- .9
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
x
prod(p^x * (1-p)^(1-x))
prod(p^a * (1-p)^(1-a))
a <- c(1,1,1,0,0,0,0,0,0,0)
prod(p^a * (1-p)^(1-a))
p <- .3
a <- c(1,1,1,0,0,0,0,0,0,0)
prod(p^a * (1-p)^(1-a))
#| echo: false
library(tidyverse)
n <- 10
p <- .3
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
x
prod(p^x * (1-p)^(1-x)) #probability of this x happening
a <- c(1,1,1,0,0,0,0,0,0,0)
prod(p^a * (1-p)^(1-a))
#| echo: false
library(tidyverse)
n <- 10
p <- .3
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
x
prod(p^x * (1-p)^(1-x)) #probability of this x happening
a <- c(1,1,1,0,0,0,0,0,0,0)
prod(p^a * (1-p)^(1-a))
#| echo: false
library(tidyverse)
n <- 10
p <- .3
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
x
prod(p^x * (1-p)^(1-x)) #probability of this x happening
a <- c(1,1,1,0,0,0,0,0,0,0)
prod(p^a * (1-p)^(1-a))
#| echo: false
library(tidyverse)
n <- 10
p <- .2
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
x
prod(p^x * (1-p)^(1-x)) #probability of this x happening
a <- c(1,1,1,0,0,0,0,0,0,0)
prod(p^a * (1-p)^(1-a))
#| echo: false
library(tidyverse)
n <- 10
p <- .4
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
x
prod(p^x * (1-p)^(1-x)) #probability of this x happening
a <- c(1,1,1,0,0,0,0,0,0,0)
prod(p^a * (1-p)^(1-a))
library(vroom)
library(vroom)
vroom(train.csv)
vroom(train.csv)
library(vroom)
vroom(train.csv)
vroom(test.csv)
?vroom
vroom(train.csv)
vroom(train.csv)
vroom(train.csv)
vroom(train.csv)
vroom(file = train.csv)
vroom("train.csv")
vroom("train.csv")
library(vroom)
vroom("train.csv")
setwd("~/GitHub/KaggleBikeShare")
vroom("train.csv")
dplyr::glimpse(data)
skimr::skim(data) #overview,
DataExplorer::plot_intro(data) #visualize glimpse,
DataExplorer::plot_intro(data) #visualize glimpse,
DataExplorer::plot_intro(data) #visualize glimpse,
library(DataExplorer)
install.packages("DataExplorer")
library(DataExplorer)
DataExplorer::plot_intro(data) #visualize glimpse,
DataExplorer::plot_correlation(dataset) #correlation heatmap,
DataExplorer::plot_correlation(data) #correlation heatmap,
plot_2 <- DataExplorer::plot_bar #barcharts of discrete,
DataExplorer::plot_histograms(data) #histogram of numerical,
DataExplorer::plot_histograms(data) #histogram of numerical,
DataExplorer::plot_histograms(data) #histogram of numerical,
DataExplorer::plot_histrograms(data) #histogram of numerical,
DataExplorer::plot_missing(data)
DataExplorer::plot_intro(data) #visualize glimpse,
plot_4 <- DataExplorer::plot_correlation(data) #correlation heatmap,
plot_2 <- DataExplorer::plot_bar #barcharts of discrete,
plot_2 <- DataExplorer::plot_bar #barcharts of discrete,
DataExplorer::plot_histrograms(data) #histogram of numerical,
DataExplorer::plot_missing(data)
DataExplorer::plot_histograms(data) #histogram of numerical,
DataExplorer::plot_histogram(data) #histogram of numerical,
ggplot(data, aes(x=weather, y = count)) +
geom_histogram()
ggplot(data, aes(x=weather, y = count)) +
geom_histogram()
library(tidyverse)
library(tidymodels)
library(vroom)
library(DataExplorer)
ggplot(data, aes(x=weather, y = count)) +
geom_histogram()
library(tidyverse)
library(tidymodels)
library(vroom)
library(DataExplorer)
#read in data and EDA
data <- vroom("train.csv")
dplyr::glimpse(data)
skimr::skim(data) #overview,
DataExplorer::plot_intro(data) #visualize glimpse,
plot_4 <- DataExplorer::plot_correlation(data) #correlation heatmap,
plot_2 <- DataExplorer::plot_bar #barcharts of discrete,
DataExplorer::plot_histogram(data) #histogram of numerical,
DataExplorer::plot_missing(data)
ggplot(data, aes(x=weather, y = count)) +
geom_histogram()
ggplot(data, aes(x=weather)) +
geom_histogram()
plot_4 <- DataExplorer::plot_correlation(data) #correlation heatmap,
plot_2 <- DataExplorer::plot_bar #barcharts of discrete,
plot_3 <- DataExplorer::plot_histogram(data) #histogram of numerical,
DataExplorer::plot_missing(data)
plot_bar <- ggplot(data, aes(x=weather)) +
geom_histogram()
(plot_bar + plot_2) / (plot_3 + plot_4)
library(patchwork)
(plot_bar + plot_2) / (plot_3 + plot_4)
plot_2 <- DataExplorer::plot_bar(data) #barcharts of discrete,
plot_3 <- DataExplorer::plot_histogram(data) #histogram of numerical,
DataExplorer::plot_missing(data)
plot_bar <- ggplot(data, aes(x=weather)) +
geom_histogram()
(plot_bar + plot_2) / (plot_3 + plot_4)
plot_bar/plot_3
DataExplorer::plot_correlation(data) #correlation heatmap,
p_grid <- seq(0,1,length.out = 1001)
p_grid
likelihood <- prod(p_grid^sum(x) * (1-p_grid)^(1-x))
likelihood <- prod(p_grid^sum(x) * (1-p_grid)^(10-sum(x))
length(likelihood)
plot(p_grid, likelihood, type = "l", lwd = 2)
likelihood <- p_grid^sum(x) * (1-p_grid)^(10-sum(x))
plot(p_grid, likelihood, type = "l", lwd = 2)
plot(p_grid, likelihood, type = "l", lwd = 2, clab = "p")
plot(p_grid, likelihood, type = "l", lwd = 2, xlab = "p")
abline(v = p_hat, col = "red")
p_hat <- sum(x)/n
abline(v = p_hat, col = "red")
library(tidyverse)
n <- 10
p <- .4
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
p_grid <- seq(0,1,length.out = 1001)
likelihood <- p_grid^sum(x) * (1-p_grid)^(10-sum(x))
plot(p_grid, likelihood, type = "l", lwd = 2, xlab = "p")
p_hat <- sum(x)/n
abline(v = p_hat, col = "red")
library(tidyverse)
n <- 10
p <- .4
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
p_grid <- seq(0,1,length.out = 1001)
likelihood <- p_grid^sum(x) * (1-p_grid)^(10-sum(x))
plot(p_grid, likelihood, type = "l", lwd = 2, xlab = "p")
p_hat <- sum(x)/n
abline(v = p_hat, col = "red")
library(tidyverse)
n <- 10
p <- .4
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
p_grid <- seq(0,1,length.out = 1001)
likelihood <- p_grid^sum(x) * (1-p_grid)^(10-sum(x))
plot(p_grid, likelihood, type = "l", lwd = 2, xlab = "p")
p_hat <- sum(x)/n
abline(v = p_hat, col = "red")
library(tidyverse)
n <- 10
p <- .4
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
p_grid <- seq(0,1,length.out = 1001)
likelihood <- p_grid^sum(x) * (1-p_grid)^(10-sum(x))
plot(p_grid, likelihood, type = "l", lwd = 2, xlab = "p")
p_hat <- sum(x)/n
abline(v = p_hat, col = "red")
library(tidyverse)
n <- 10
p <- .4
x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
p_grid <- seq(0,1,length.out = 1001)
likelihood <- p_grid^sum(x) * (1-p_grid)^(10-sum(x))
plot(p_grid, likelihood, type = "l", lwd = 2, xlab = "p")
p_hat <- sum(x)/n
abline(v = p_hat, col = "red")
x <- c(1,1,1,0,0,0,0,0,0,0)
likelihood <- p_grid^sum(x) * (1-p_grid)^(10-sum(x))
plot(p_grid, likelihood, type = "l", lwd = 2, xlab = "p")
p_hat <- sum(x)/n
library(tidyverse)
n <- 10
p <- .4
og_x <- sample(c(0,1), n , replace = TRUE, prob = c(1-p, p))
p_grid <- seq(0,1,length.out = 1001)
x <- c(1,1,1,0,0,0,0,0,0,0)
likelihood <- p_grid^sum(x) * (1-p_grid)^(10-sum(x))
plot(p_grid, likelihood, type = "l", lwd = 2, xlab = "p")
p_hat <- sum(x)/n
abline(v = p_hat, col = "red")
library(tidyverse)
library(tidymodels)
library(vroom)
library(DataExplorer)
library(patchwork)
#read in data and EDA
data <- vroom("train.csv")
dplyr::glimpse(data)
skimr::skim(data) #overview,
DataExplorer::plot_intro(data) #visualize glimpse,
DataExplorer::plot_correlation(data) #correlation heatmap,
plot_temp <- ggplot(data, aes(x= temp, y = count)) +
geom_point()
plot_temp
plot_temp <- ggplot(data, aes(x= temp, y = count)) +
geom_point() +
geom_smooth()
plot_temp <- ggplot(data, aes(x= temp, y = count)) +
geom_point() +
geom_smooth()
plot_temp
plot_bar/plot_temp
DataExplorer::plot_correlation(data) #correlation heatmap,
plot_confound <- ggplot(data, aes(x = atemp, y = temp)) +
geom_point() +
geom_smooth()
(plot_bar + plot_temp) / (plot_counfound)
plot_confound <- ggplot(data, aes(x = atemp, y = temp)) +
geom_point() +
geom_smooth()
(plot_bar + plot_temp) / (plot_counfound)
(plot_bar + plot_temp) / (plot_confound)
dplyr::glimpse(data)
plot_2 <- DataExplorer::plot_bar(data) #barcharts of discrete,
plot_instinct <- ggplot(data, aes(x= holiday, y = casual)) +
geom_point() +
geom_smooth()
(plot_bar + plot_temp) / (plot_confound + plot_instinct)
plot_2 <- DataExplorer::plot_bar(data) #barcharts of discrete,
plot_instinct <- ggplot(data, aes(x = workingday, y = casual)) +
geom_point() +
geom_smooth()
plot_bar/plot_temp
(plot_bar + plot_temp) / (plot_confound + plot_instinct)
plot_instinct
plot_2 <- DataExplorer::plot_bar(data) #barcharts of discrete,
DataExplorer::plot_missing(data)
plot_3 <- DataExplorer::plot_histogram(data) #histogram of numerical,
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = holiday)) +
geom_point() +
geom_smooth()
plot_instinct
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
geom_smooth()
plot_instinct
(plot_bar + plot_temp) / (plot_confound + plot_instinct)
plot_instinct
#A plot of how workingdays affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_hist() +
geom_smooth()
#A plot of how workingdays affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_histogram() +
geom_smooth()
plgeom_histogram()plot_instinct
plot_instinct
#bar plot of weather
plot_bar <- ggplot(data, aes(x=weather)) +
geom_bar()
#bar plot of weather
plot_bar <- ggplot(data, aes(x=weather)) +
geom_bar()
plot_bar
#bar plot of weather
plot_bar <- ggplot(data, aes(x=weather)) +
geom_bar() +
labs(x = "Weather Type", y = "Number of users")
plot_bar
#A plot of how workingdays affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_bar()
plot_instinct
#A plot of how workingdays affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, fill = workingday)) +
geom_bar(position = "stack", aes(y = after_stat(count))) +
facet_wrap(~ casual)
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, fill = workingday)) +
geom_bar(position = "stack", aes(y = after_stat(count))) +
facet_wrap(~ casual)
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
plot_instinct
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
scale_color_manual(values = c("red", "blue"))
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
scale_color_manual(values = c("red", "blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
scale_color_gradient(values = c("red", "blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
scale_color_gradient(values = c("red", "blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = workingday, y = casual, color = workingday)) +
geom_point() +
scale_color_gradient(values = c("red", "blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = workingday, y = casual, color = workingday)) +
geom_point() +
# scale_color_gradient(values = c("red", "blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
# scale_color_gradient(values = c("red", "blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
scale_color_gradient(values = c("red", "blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
scale_color_manual(values = c("0" = "blue", "1" = "red")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
scale_color_manual(values = c("0" = "blue", "1" = "red")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Working Day")
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = workingday)) +
geom_point() +
scale_color_manual(values = c(0 = "blue", 1 = "red")) +
plot_instinct
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Day Type")
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = factor(workingday, labels = c("Holiday", "Working Day"))) +
scale_color_manual(values = c("Holiday" = "blue", "Working Day" = "red")) +
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = factor(workingday, labels = c("Holiday", "Working Day")))) +
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(
data,
aes(
x = registered,
y = casual,
color = factor(workingday, labels = c("Holiday", "Working Day"))
)
) +
geom_point() +
scale_color_manual(values = c("Holiday" = "blue", "Working Day" = "red")) +
labs(
x = "Number of Registered Users",
y = "Number of Casual Users",
color = "Day Type"
)
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(
data,
aes(
x = registered,
y = casual,
color = factor(workingday, labels = c("Holiday", "Working Day"))
)
) +
geom_point() +
scale_color_manual(values = c("Holiday" = "Green", "Working Day" = "red")) +
labs(
x = "Number of Registered Users",
y = "Number of Casual Users",
color = "Day Type"
)
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(
data,
aes(
x = registered,
y = casual,
color = factor(workingday, labels = c("Holiday", "Working Day"))
)
) +
geom_point() +
scale_color_manual(values = c("Holiday" = "Green", "Working Day" = "Blue")) +
labs(
x = "Number of Registered Users",
y = "Number of Casual Users",
color = "Day Type"
)
plot_instinct
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = factor(workingday, labels = c("Holiday", "Working Day")))) +
geom_point() +
scale_color_manual(values = c("Holiday" = "Green", "Working Day" = "Blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Day Type"
)
(plot_bar + plot_temp) / (plot_confound + plot_instinct)
#bar plot of weather
plot_bar <- ggplot(data, aes(x=weather)) +
geom_bar() +
labs(x = "Weather Type", y = "Number of Users")
plot_bar
#Scatterplot of Temperature with count
plot_temp <- ggplot(data, aes(x= temp, y = count)) +
geom_point() +
geom_smooth() +
labs(x = "Temperature", y = "Total Number of Users")
#bar plot of weather
plot_bar <- ggplot(data, aes(x=weather)) +
geom_bar() +
labs(x = "Weather Type", y = "Number of Users")
#Scatterplot of Temperature with count
plot_temp <- ggplot(data, aes(x= temp, y = count)) +
geom_point() +
geom_smooth() +
labs(x = "Temperature", y = "Total Number of Users")
#Scatterplot of temperature and atemperature to illustrate confounding issues
plot_confound <- ggplot(data, aes(x = atemp, y = temp)) +
geom_point() +
geom_smooth() +
labs(x = "Feels Like Temperature", y = "Temperature")
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = factor(workingday, labels = c("Holiday", "Working Day")))) +
geom_point() +
scale_color_manual(values = c("Holiday" = "Green", "Working Day" = "Blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Day Type"
)
(plot_bar + plot_temp) / (plot_confound + plot_instinct)
#Scatterplot of temperature and atemperature to illustrate confounding issues
plot_confound <- ggplot(data, aes(y = atemp, x = temp)) +
geom_point() +
geom_smooth() +
labs(y = "Feels Like Temperature", x = "Temperature")
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = factor(workingday, labels = c("Holiday", "Working Day")))) +
geom_point() +
scale_color_manual(values = c("Holiday" = "Green", "Working Day" = "Blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Day Type"
)
#plot all four
(plot_bar + plot_temp) / (plot_confound + plot_instinct)
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = factor(workingday, labels = c("Holiday", "Working Day")))) +
geom_point() +
scale_color_manual(values = c("Holiday" = "Green", "Working Day" = "Blue")) +
labs(x = "Number of Registered Users", y = "Number of Casual Users", color = "Day Type"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#plot all four
(plot_bar + plot_temp) / (plot_confound + plot_instinct)
#A plot of how working days affect who is using the bikes
plot_instinct <- ggplot(data, aes(x = registered, y = casual, color = factor(workingday, labels = c("Holiday", "Working Day")))) +
geom_point() +
scale_color_manual(values = c("Holiday" = "Green", "Working Day" = "Blue")) +
labs(x = "Registered Users", y = "Casual Users", color = "Day Type"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#plot all four
(plot_bar + plot_temp) / (plot_confound + plot_instinct)
